/**********************************************************************
* Autogenerated file, all changes will be lost!
***********************************************************************/

use crate::messages::{MessageFields, FromSlice, AddrField};

/* GLL NMEA message v4 */
#[derive(Debug, Clone)]
pub struct NmeaGllMessage<'a> { 
    pub latitude: f64,             // 
    pub latitude_dir: u8,             // 
    pub longitude: f64,             // 
    pub longitude_dir: u8,             // 
    pub utc: Option<&'a str>,             // 
    pub status: Option<u8>,             // 
    
}

impl<'a> NmeaGllMessage<'a> {
    pub fn new() -> NmeaGllMessage<'a> {
        NmeaGllMessage { 
            latitude: 0.0,
            latitude_dir: b'N',
            longitude: 0.0,
            longitude_dir: b'E',
            utc: None,
            status: None,
            
        }
    }
}

impl<'a> MessageFields<'a> for NmeaGllMessage<'a> {
    fn clear(&mut self) { 
        self.latitude= 0.0;
        self.latitude_dir= b'N';
        self.longitude= 0.0;
        self.longitude_dir= b'E';
        self.utc= None;
        self.status= None;
        
    }

    fn get_field_mut(&mut self, idx: u8) -> &mut (dyn FromSlice<'a> + 'a) {
        match idx {
            0 => &mut self.latitude,
            1 => &mut self.latitude_dir,
            2 => &mut self.longitude,
            3 => &mut self.longitude_dir,
            4 => &mut self.utc,
            5 => &mut self.status,
            
            _ => panic!("Invalid field index"),
        }
    }

    #[inline]
    fn field_count(&self) -> u8 {
        6
    }

    fn get_addr(&self) -> AddrField<'a> {
        AddrField::new("GPGLL".as_bytes())
    }
}